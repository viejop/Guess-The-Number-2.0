import random
import os

#structure for the class
class User:
    def __init__(self, name, score):
        self.name = name
        self.score = score

    def assignScore(self, score):
        self.score = score

    def displayProperties(self):
        return f"Name: {self.name}, Score: {self.score}\n"

#creating a main menu
def titleScreen():
    print("#############################")
    print("||                         ||")
    print("||   GUESS THE NUMBER 2.0  ||")
    print("||                         ||")
    print("#############################")
    print("1. How to play")
    print("2. Start game")
    
#title screen logic
    while True:
        titleInput = input("Enter your choice (1 or 2): ")
        

        if titleInput.isdigit():
            titleInput = int(titleInput)
            if titleInput == 1:
                print("Once the game starts guess a random number between 1 and 100. Try to obtain a high score by guessing the correct number in the least amount of attempts.")
                continue

            elif titleInput == 2:
                print("Starting the game...\n")
                break
            else:
                print("Input must be 1 or 2.")
        
        elif not titleInput.isdigit():
            print("Invalid input")
            continue
#game logic
def game(): 
    #username input
    print("Please input a username.")
    nameInput = input()
    user = User(nameInput, 0)
    
    print("Username successfully stored.")

#loop for guessing
    while True: 
        guessCounter = 0
        correctAnswer = random.randint(1, 100)

        print("\nNew game started! Guess the number! It's between 1 and 100.")

        #guess input
        while True:
            userGuess = input("Enter your guess: ")

            if not userGuess.isdigit():
                print("Guess must be a number between 1 and 100.")
                continue

            userGuess = int(userGuess)

            if userGuess < 1 or userGuess > 100:
                print("Guess must be between 1 and 100.")
                continue  

            guessCounter += 1

        #guessing logic
            if userGuess > correctAnswer:
                print("Guess is too high")
            elif userGuess < correctAnswer:
                print("Guess is too low")
            else:
                print(f"Congratulations! You guessed it in {guessCounter} attempts.")

                finalScore = guessCounter * 100
                user.assignScore(finalScore) #logic for deciding and assigning score


                f = open("scoreboard.txt", "a")  
                f.write(user.displayProperties())  #write the user's properties to the file
                f.close()  

                print(f"Your score is {finalScore} and has been saved to 'scoreboard.txt'.")

                sortScores()
                break

        while True:
            gameInput = input("Would you like to play again? (Y/N): ").strip().lower()
            if gameInput == "y":
                break  
            elif gameInput == "n":
                print("Thanks for playing! Goodbye.")
                return 
            else:
                print("Invalid Input")
                continue
def sortScores():
    if not os.path.exists("scoreboard.txt"):  #if the file doesn't exist, it will create it
        open("scoreboard.txt", "w").close() 
        return  

    with open("scoreboard.txt", "r") as f: #open the file in read mode, and store the lines in a list
        lines = f.readlines()

    users = []
    for line in lines:

        parts = line.strip().split(", ")
        if len(parts) == 2 and "Name: " in parts[0] and "Score: " in parts[1]:  #if the line is in the correct format, it will split the line into two parts

            name = parts[0].split(": ")[1] #split the first part of the line into two parts, and store the second part in the name variable
            userscore = parts[1].split(": ")[1] #split the second part of the line into two parts, and store the second part in the userscore variable

            if userscore.isdigit():  
                users.append((name, int(userscore))) 

    users.sort(key=lambda x: x[1])  #sort the users list by the second element of each tuple

    with open("scoreboard.txt", "w") as f:
        for user in users:
            f.write(f"Name: {user[0]}, Score: {user[1]}\n") #write the sorted list to the file

titleScreen()
game()
